angle=-theta*180/pi)
plot(0:1,0:1)
rasterImage(picx,0,0,1,1)
points(L[1],L[2],col="red")
points(R[1],R[2],col="red")
points(emid[1],emid[2],col="blue")
plot(0:1,0:1)
rasterImage(picx,0,0,1,1,angle=-theta*180/pi)
points(emidr[1],emidr[2],col="blue")
edist
(R[2]-R[1])^2 + (L[2]-L[1])^2
sqrt((R[2]-R[1])^2 + (L[2]-L[1])^2)
dmid
lines(dmid*sin(tt),dmid*cos(tt),col="white")
plot(0:1,0:1)
rasterImage(picx,0,0,1,1,angle=0)
lines(dmid*sin(tt),dmid*cos(tt),col="white")
plot(0:1,0:1)
rasterImage(picx,0,0,1,1,angle=-theta*180/pi)
lines(dmid*sin(tt),dmid*cos(tt),col="white")
plot(0:1,0:1)
plot(0:1,0:1)
rasterImage(picx,0,0,1,1,angle=-45)
plot(0:1,0:1)
rasterImage(picx,0,0,1,1,angle=45)
lines(dmid*sin(tt),dmid*cos(tt),col="white")
plot(-1:1,-1:1)
rasterImage(picx,0,0,1,1,angle=45)
plot(-1:1,0:2)
rasterImage(picx,0,0,1,1,angle=45)
par(pty="s")
plot(-1:1,0:2)
rasterImage(picx,0,0,1,1,angle=45)
lines(dmid*sin(tt),dmid*cos(tt),col="white")
dim(picx)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(sin(theta+phi),cos(theta+phi)) # co-ordinates of midpoint in rotated image
sc=2/edist
rasterImage(picx,-sc*emidr[1],-sc*dm*emidr[2],sc*(1-emidr[1]),sc*dm*(1-emidr[2]),
angle=-theta*180/pi)
dm
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(sin(theta+phi),cos(theta+phi)) # co-ordinates of midpoint in rotated image
sc=2/edist
rasterImage(picx,-sc*emidr[1],-sc*dm*emidr[2],sc*(1-emidr[1]),sc*dm*(1-emidr[2]),
angle=theta*180/pi)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(sin(theta+phi),cos(theta+phi)) # co-ordinates of midpoint in rotated image
sc=2/edist
rasterImage(picx,0,0,1,dm)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(sin(theta+phi),cos(theta+phi)) # co-ordinates of midpoint in rotated image
sc=2/edist
rasterImage(picx,-sc*emidr[1],-sc*dm*emidr[2],sc*(1-emidr[1]),sc*dm*(1-emidr[2]),
angle=-theta*180/pi)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
sc=2
rasterImage(picx,-sc*emidr[1],-sc*dm*emidr[2],sc*(1-emidr[1]),sc*dm*(1-emidr[2]),
angle=-theta*180/pi)
points(0,0)
points(0,0,pch=16,col="white")
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
rasterImage(picx,0,0,1,dm,angle=-theta*180/pi)
points(emidr[1],emidr[2],col="white",pch=16)
phi
emidr=dmid*c(sin(theta-phi),cos(theta-phi)) # co-ordinates of midpoint in rotated image
points(emidr[1],emidr[2],col="white",pch=16)
theta
phi
plot(0:2,0:2)
rasterImage(picx,0,0,1,dm,angle=-theta*180/pi)
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
emidr=dmid*c(sin(theta+phi),cos(theta+phi)) # co-ordinates of midpoint in rotated image
points(emidr[1],emidr[2],col="blue",pch=16)
emidr
phi
theta
emidr=dmid*c(-sin(theta+phi),cos(theta+phi)) # co-ordinates of midpoint in rotated image
points(emidr[1],emidr[2],col="blue",pch=16)
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
points(emidr[1],emidr[2],col="blue",pch=16)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=2/edist
rasterImage(picx,-sc*emidr[1],-sc*dm*emidr[2],sc*(1-emidr[1]),sc*dm*(1-emidr[2]),
angle=-theta*180/pi)
points(0,0,pch=16,cex=2,col="red")
plot(-1:1,0:2)
rasterImage(picx,0,0,1,dm,angle=-theta*180/pi)
points(emidr[1],emidr[2],pch=16,col="blue")
plot(-1:1,-1:1)
rasterImage(picx,-emidr[1],-dm*emidr[2],1-emidr[1],dm*(1-emidr[2]),angle=-theta*180/pi)
-emidr[1]
abline(v=-emidr[1])
emidr[2]
abline(h=-emidr[2])
plot(-1:1,-1:1)
rasterImage(picx,-emidr[1],-dm*emidr[2],1-emidr[1],dm*(1-emidr[2]),angle=0)
rasterImage(picx,-emidr[1],-dm*emidr[2],1-emidr[1],dm*(1-emidr[2]),angle=-theta*180/pi)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=2/edist
rasterImage(picx,-sc*emidr[1],-sc*dm*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*dm*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
points(0,0,pch=16,cex=2,col="red")
plot(-1:1,-1:1)
rasterImage(picx,-emidr[1],-dm*emidr[2],1-emidr[1],dm*(1-emidr[2]),angle=0)
rasterImage(picx,-emidr[1],-dm*emidr[2],1-emidr[1],dm*(1-emidr[2]),angle=-theta*180/pi)
plot(-1:1,-1:1)
rasterImage(picx,-emidr[1],-dm*emidr[2],1-emidr[1],(dm-emidr[2]),angle=0)
plot(-1:1,-1:1)
rasterImage(picx,-emidr[1],-emidr[2],1-emidr[1],(dm-emidr[2]),angle=0)
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,1),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
l_eye
save(l_eye,r_eye,file="~/Desktop/Mtemp_loc.RData")
# Loop through
tt=seq(0,2*pi,length=100)
ani.record(reset = TRUE)  # clear history before recording
par(pty="s")
for (i in 1:length(photo_names)) {
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
points(0,0,pch=16,cex=2,col="red")
ani.record()
print(i)
}
oopts = ani.options(interval = 0.5)
ani.replay()
length(photo_names)
i=2
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
dm
load("~/Desktop/Mtemp_loc.RData",v=T)
# Packages
library("magick")
library("opencv")
library(animation)
library(grid)
# Directory of photos
photo_dir="~/Desktop/M_sample/"
# Names of photos
photo_names=list.files(photo_dir,full.names=TRUE)
i=2
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
plot(-1:1,-1:1)
rasterImage(picx,-emidr[1],-emidr[2],1-emidr[1],(dm-emidr[2]),angle=0)
rasterImage(picx,-emidr[1],-emidr[2],1-emidr[1],(dm-emidr[2]),angle=-theta*180/pi)
ani.record(reset = TRUE)  # clear history before recording
for (i in 1:length(photo_names)) {
par(pty="s")
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
points(0,0,pch=16,cex=2,col="red")
ani.record()
print(i)
}
oopts = ani.options(interval = 0.5)
ani.replay()
par(pty="s")
i=2
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
sc
for (i in 1:length(photo_names)) {
par(pty="s")
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1 #1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
points(0,0,pch=16,cex=2,col="red")
ani.record()
print(i)
}
oopts = ani.options(interval = 0.5)
ani.replay()
i=2
par(pty="s")
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
par(pty="s")
plot(0,xlim=c(-1.5,1.5),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
sc=3
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
points(0,0,pch=16,cex=2,col="red")
# Loop through
tt=seq(0,2*pi,length=100)
ani.record(reset = TRUE)  # clear history before recording
for (i in 1:length(photo_names)) {
par(pty="s")
plot(0,xlim=c(-2,2),ylim=c(-2,2),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=l_eye[i,]; R=r_eye[i,]; L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
points(0,0,pch=16,cex=2,col="red")
ani.record()
print(i)
}
oopts = ani.options(interval = 0.5)
ani.replay()
ani.replay()
oopts = ani.options(interval = 0.1)
ani.replay()
## Matthew 1 year
# Packages
library("magick")
library(animation)
library(grid)
library(jpeg)
library(exifr)
# Directory of photos
photo_dir="~/Personal/Matthew/Photo_a_day/Photos_original/"
# Names of photos
photo_names=list.files(photo_dir,full.names=TRUE)
# Gather co-ordinates of eyes
l_eye=data.frame(x=rep(NA,length(photo_names)),y=rep(NA,length(photo_names)));
rownames(l_eye)=photo_names
r_eye=l_eye
metadata=vector(mode="list",length=length(photo_names))
names(metadata)=photo_names
sfile="~/Personal/Matthew/Photo_a_day/locdata.RData"
if (file.exists(sfile)) {
load(locdata)
}
pmax=50
for (i in 1:pmax) {
#  for (i in 1:length(photo_names)) {
if (!is.finite(l_eye[photo_names[i],1])) {
par(mar=c(0,0,0,0))
plot(0,type="n",xlim=c(0,1),ylim=c(0,1),xaxs="i",yaxs="i")
picx=readJPEG(photo_names[i])
rasterImage(picx,0,0,1,1)
clickloc=as.numeric(gsub("npc","",as.vector(grid.locator("npc"))))*4/3
points(clickloc[1],clickloc[2],pch=16,col="white",cex=3)
clickloc2=as.numeric(gsub("npc","",as.vector(grid.locator("npc"))))*4/3
points(clickloc2[1],clickloc2[2],pch=16,col="black",cex=3)
l_eye[i,]=clickloc
r_eye[i,]=clickloc2
dat=read_exif(photo_names[i])
metadata[[i]]=dat
names(metadata)[[i]]
save(l_eye,r_eye,metadata,file=sfile)
Sys.sleep(0.5)
}
print(i)
}
warnings()
pmax=max(which(is.finite(l_eye[,1])))
pmax
pmax=max(which(is.finite(l_eye[,1])))
l_eye=l_eye[1:pmax,]
r_eye=r_eye[1:pmax,]
metadata=metadata[1:pmax]
photo_names=photo_names[1:pmax]
dates=as.Date(unlist(lapply(metadata,function(x) x$DateTimeOriginal)),format="%Y:%m:%d")
xord=order(dates)
plot(dates)
which.max(dates)
max(dates)
# Reorder by dates
photo_names=photo_names[xord]
l_eye=l_eye[xord,]
r_eye=r_eye[xord,]
dates=dates[xord]
metadata=metadata[xord]
# Loop through
tt=seq(0,2*pi,length=100)
ani.record(reset = TRUE)  # clear history before recording
for (i in 1:length(photo_names)) {
par(pty="s")
plot(0,xlim=c(-3,3),ylim=c(-3,3),type="n",bty="n",ann=F,xaxt="n",yaxt="n")
picx=readJPEG(photo_names[i])
dm=dim(picx)[1]/dim(picx)[2]
L=as.numeric(l_eye[i,1:2]); R=as.numeric(r_eye[i,1:2]); L[2]=L[2]*dm; R[2]=R[2]*dm
emid=(L+R)/2 # midpoint of eyes
edist=sqrt(sum((R-L)^2)) # distance between eyes
theta=atan((R[2]-L[2])/(R[1]-L[1])) # angle through which to rotate picture
phi=-atan(emid[2]/emid[1]) # angle to midpoint of eyes
dmid=sqrt(sum(emid^2)) # distance from bottom left corner to midpoint of eyes
emidr=dmid*c(cos(theta+phi),-sin(theta+phi)) # co-ordinates of midpoint in rotated image
sc=1/edist
rasterImage(picx,-sc*emidr[1],-sc*emidr[2],sc*(1-emidr[1]),sc*(dm-emidr[2]),
angle=-theta*180/pi)
#points(0,0,pch=16,cex=2,col="red")
ani.record()
print(i)
}
oopts = ani.options(interval = 0.5)
saveHTML(ani.replay(),img.name="film_temp50")
help(saveGIF)
oopts = ani.options(interval = 0.5)
saveGIF(ani.replay(),movie.name="matthew_days50.gif")
photo_names=list.files(photo_dir,full.names=TRUE)
length(photo_names)
help(ani.options)
setwd("~/Research/Fairness/Papers/")
setwd("../Package/")
library(devtools)
create("SPARRA_fairness")
create("SPARRAfairness")
setwd("SPARRAfairness/")
document()
document()
document()
document()
document()
document()
document()
document()
source("~/Research/Fairness/Package/SPARRAfairness/R/functions.R")
plot(0,xlim=c(-1,1),ylim=c(-1,1),type="n")
drawperson(0,0,1,col="yellow",border="red",lwd=3,lty=2)
source("~/Research/Fairness/Package/SPARRAfairness/R/functions.R")
source("~/Research/Fairness/Package/SPARRAfairness/R/functions.R")
document()
document()
warnings()
warnings()
document()
document()
document()
document()
load("~/Research/Updating/OHS/Package/OptHoldoutSize/data/aspre_emulation.RData",v=T)
lx=list.files("~/Research/Fairness/Git/fair/most_recent_nsh_output/",pattern="summary_",full.names=TRUE)
lx
rm(list=c("lx"))
lx=list.files("~/Research/Fairness/Git/fair/most_recent_nsh_output/",pattern="summary_",full.names=TRUE)
for (i in 1:length(lx)) source(lx[i])
rm(list=c("lx","i"))
l1=ls()
length(l1)
l1[1:10]
sort(l1)[1250:1260]
all_data=list()
for (i in 1:length(l1)) all_data[[i]]=get(l1[i])
names(all_data)=l1
save(all_data,file="~/Research/Fairness/Package/data/all_data.RData")
save(all_data,file="~/Research/Fairness/Package/SPARRAfairness/data/all_data.RData)
"""""")
save(all_data,file="~/Research/Fairness/Package/SPARRAfairness/data/all_data.RData")
document()
document()
document()
