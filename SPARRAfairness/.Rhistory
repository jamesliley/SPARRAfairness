labels=names(groupings[[g]]),
col=phs_colours(c("phs-blue","phs-magenta")),
ci_col=phs_colours(c("phs-blue","phs-magenta")),
yrange = plot_details[[pname]]$yrange,
lpos = plot_details[[pname]]$lpos,
yrange_lower = plot_details[[pname]]$yrange_lower,
highlight=highlight_value,
logscale=TRUE)
dev.off()
## Other main metrics                        ####
for (s in 1:length(metrics)) {
pname=metrics[s]
obj_name=paste0(pname,"_v",version,"_",names(groupings)[g],"_",names(categories)[cc])
obj=get(obj_name)
xname=paste0(out_dir,obj_name,".pdf")
obj_list=list(
list(x=obj$cutoffs,y=obj$p_AA,ci=obj$ci_AA),
list(x=obj$cutoffs,y=obj$p_BB,ci=obj$ci_BB)
)
pdf(xname,width=3,height=3.5)
groupmetric_2panel(obj_list,
labels= names(groupings[[g]]),
col=phs_colours(c("phs-blue","phs-magenta")),
ci_col=phs_colours(c("phs-blue","phs-magenta")),
yrange = plot_details[[pname]]$yrange,
lpos = plot_details[[pname]]$lpos,
yrange_lower = plot_details[[pname]]$yrange_lower,
highlight=highlight_value)
dev.off()
}
}
}
}
##**********************************************#
## Adjusted FORP/FDRP                        ####
##**********************************************#
for (version in c(3,4)) {
for (g in 1:length(groupings)) {
for (ptype in 1:2) {
if (ptype==1) {
obj_name=paste0("forp_adjusted_v",version,"_",names(groupings)[g])
pname="forp_adjusted"
} else {
obj_name=paste0("fdrp_adjusted_v",version,"_",names(groupings)[g])
pname="fdrp_adjusted"
}
xname=paste0(out_dir,obj_name,".pdf")
obj=get(obj_name)
obj_list=list(
list(x=obj$cutoffs,y=obj$p_AA,ci=obj$ci_AA),
list(x=obj$cutoffs,y=obj$p_BB,ci=obj$ci_BB)
)
pdf(xname,width=3,height=3.5)
groupmetric_2panel(obj_list,
labels=names(groupings[[g]]),
col=phs_colours(c("phs-blue","phs-magenta")),
ci_col=phs_colours(c("phs-blue","phs-magenta")),
yrange = plot_details[[pname]]$yrange,
lpos = plot_details[[pname]]$lpos,
yrange_lower = plot_details[[pname]]$yrange_lower,
highlight=highlight_value)
dev.off()
}
}
}
##**********************************************#
## Counterfactual fairness                   ####
##**********************************************#
for (g in 1:length(groupings)) {
for (version in c(3,4)) {
pname="counterfactual_dp"
obj_name=paste0("counterfactual_dp_v",version,"_",names(groupings)[[g]])
obj=get(obj_name)
xname=paste0(out_dir,obj_name,".pdf")
obj_list=list(
list(x=exp(obj$xx),y=obj$yA,ci=obj$cA),
list(x=exp(obj$xx),y=obj$yB,ci=obj$cB)
)
pdf(xname,width=3,height=3.5)
groupmetric_2panel(obj_list,
labels=names(groupings[[g]]),
col=phs_colours(c("phs-blue","phs-magenta")),
ci_col=phs_colours(c("phs-blue","phs-magenta")),
yrange = plot_details[[pname]]$yrange,
lpos = plot_details[[pname]]$lpos,
yrange_lower = plot_details[[pname]]$yrange_lower,
highlight=highlight_value,
logscale=TRUE)
dev.off()
}
}
##**********************************************#
## FORP decomposition                        ####
##**********************************************#
cutoff=10/100 # 10% risk score threshold
for (version in c(3,4)) {
for (g in 1:length(groupings)) {
obj_name=paste0("forp_decomposition_v",version,"_",names(groupings)[[g]])
xname=paste0(out_dir,obj_name,".pdf")
names_group1=paste0("v",version,"_",names(groupings[[g]])[1],"_q",1:20)
names_group2=paste0("v",version,"_",names(groupings[[g]])[2],"_q",1:20)
decomp1=decomposition_matrix[names_group1,]
decomp2=decomposition_matrix[names_group2,]
pdf(xname,width=6,height=6)
plot_decomp(decomp1,
decomp2,
threshold=cutoff,
labels=names(groupings[[g]]))
dev.off()
for (subgroup in names(groupings[[g]])) {
obj_name=paste0("for_breakdown_v",version,"_",names(groupings)[[g]])
xname=paste0(out_dir,obj_name,".pdf")
pdf(xname,width=3,height=3.5)
for_breakdown(decomp, subgroup, version, cutoff, ldiff = 0.01, show = TRUE,
xy0 = TRUE, ci=0.95)
dev.off()
}
}
obj_name=paste0("for_breakdown_v",version,"_all")
xname=paste0(out_dir,obj_name,".pdf")
pdf(xname,width=3,height=3.5)
for_breakdown(decomp, "all", version, cutoff, ldiff = 0.01, show = TRUE,
xy0 = TRUE, ci=0.95)
dev.off()
}
dat2mat
help(dat2mat)
source("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp))]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
source("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
source("~/Desktop/temp.R")
source("~/.active-rstudio-document")
debugSource("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
p
dt=decomp[grep("Male",rownames(decomp)),]
dt
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
xt
yt
debugSource("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
plot(xt,yt)
plot(1)
dev.off()
dev.off()
plot(1)
for (i in 1:1000) dev.off()
plot(xt,yt)
for (i in 1:1000) dev.off()
for (i in 1:1000) dev.off()
for (i in 1:1000) dev.off()
for (i in 1:1000) dev.off()
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
plot(xt,yt)
plot(xt,yt-xt)
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
debugSource("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
p
data_df
p
print(p)
dput(p)
debugSource("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
source("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = TRUE)
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = FALSE)
source("~/Desktop/temp.R")
dt=decomp[grep("Male",rownames(decomp)),]
ff=for_breakdown(dt, "Male", threshold = 0.1,inc_died = FALSE)
source("~/Desktop/temp.R")
library(devtools)
setwd("~/Research/Fairness/Git/SPARRAfairness/")
document()
getwd()
list.files()
setwd("SPARRAfairness/")
list.files()
document()
document()
document()
document()
document()
setwd("..")
install("SPARRAfairness/")
install.packages("mvtnorm")
install.packages("mvtnorm")
install("SPARRAfairness/")
install("SPARRAfairness/")
install("SPARRAfairness/")
install("SPARRAfairness/")
# Load packages
library(SPARRAfairness)
library(ranger)
# Get data
data(all_data)
data(decomposition_matrix)
# Set random seed
seed=463825
set.seed(seed)
# Simulate data
pop_data=sim_pop_data(10000)
# First few rows
head(pop_data)
# Fit model
sim_model=ranger(
target~age+sexM+raceNW+prevAdm+SIMD+urban_rural+mainland_island,
data=pop_data)
# Model predictions
score=predict(sim_model,pop_data)$predictions
# Affix to pop_data
pop_data$score=score
cutoff=0.1 # 10% risk score threshold
decomp_matrices=dat2mat(pop_data,
score=pop_data$score,
group1=which(pop_data$urban_rural==0),
group2=which(pop_data$urban_rural==1),
nquant=20)
for_breakdown(decomp_matrices$matrix1,
group="Urban",
threshold=cutoff)
source("~/Research/Fairness/Git/SPARRAfairness/SPARRAfairness/R/SPARRAfairness_functions.R")
cutoff=0.1 # 10% risk score threshold
decomp_matrices=dat2mat(pop_data,
score=pop_data$score,
group1=which(pop_data$urban_rural==0),
group2=which(pop_data$urban_rural==1),
nquant=20)
for_breakdown(decomp_matrices$matrix1,
group="Urban",
threshold=cutoff)
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
source("~/Desktop/temp.R")
cutoff=0.1 # 10% risk score threshold
decomp_matrices=dat2mat(pop_data,
score=pop_data$score,
group1=which(pop_data$urban_rural==0),
group2=which(pop_data$urban_rural==1),
nquant=20)
for_breakdown(decomp_matrices$matrix1,
group="Urban",
threshold=cutoff)
m1=decomp_matrices$matrix1
head(m1)
cutoff=0.1 # 10% risk score threshold
decomp_matrices=dat2mat(pop_data,
score=pop_data$score,
group1=which(pop_data$urban_rural==0),
group2=which(pop_data$urban_rural==1),
nquant=20)
for_breakdown(decomp_matrices$matrix1,
group="Urban",
threshold=0.5)
install("SPARRAfairness/")
help(file.copy)
groupings
getwd()
setwd("../../")
setwd("Git/fair/drawfigures/")
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
version
g
groupings[[6]]
subgroup
obj_name=paste0("for_breakdown_v",version,"_",names(groupings)[[g]])
xname=paste0(out_dir,obj_name,".pdf")
obj_name
dev.off()
for (i in 1:50) dev.off()
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
image(decomp)
decomp
for_breakdown(decomp,group = subgroup,threshold = cutoff)
cutoff=10/100 # 10% risk score threshold
for (version in c(3,4)) {
for (g in 1:length(groupings)) {
obj_name=paste0("forp_decomposition_v",version,"_",names(groupings)[[g]])
xname=paste0(out_dir,obj_name,".pdf")
names_group1=paste0("v",version,"_",names(groupings[[g]])[1],"_q",1:20)
names_group2=paste0("v",version,"_",names(groupings[[g]])[2],"_q",1:20)
decomp1=decomposition_matrix[names_group1,]
decomp2=decomposition_matrix[names_group2,]
pdf(xname,width=6,height=6)
plot_decomp(decomp1,
decomp2,
threshold=cutoff,
labels=names(groupings[[g]]))
dev.off()
for (subgroup in names(groupings[[g]])) {
obj_name=paste0("for_breakdown_v",version,"_",names(groupings)[[g]])
xname=paste0(out_dir,obj_name,".pdf")
pdf(xname,width=3,height=3.5)
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
for_breakdown(decomp,group = subgroup,threshold = cutoff)
dev.off()
print(c(subgroup,version))
}
}
obj_name=paste0("for_breakdown_v",version,"_all")
xname=paste0(out_dir,obj_name,".pdf")
pdf(xname,width=3,height=3.5)
for_breakdown(decomp, "all", version, cutoff, ldiff = 0.01, ci=0.95)
dev.off()
}
setwd("../../SPARRAfairness/")
install("SPARRAfairness/")
install("SPARRAfairness/")
setwd("../../Git/fair/drawfigures/")
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
warnings()
setwd("../../SPARRAfairness/")
install("SPARRAfairness/")
setwd("../../Git/fair/drawfigures/")
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
warning()
warnings()
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
warnings()
setwd("../../SPARRAfairness/")
install("SPARRAfairness/")
setwd("../../Git/fair/drawfigures/")
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
goupings
groupings
calnames=paste("cal_v3_",names(groupings))
calnames
calnames=paste0("cal_v3_",names(groupings),".pdf")
calnames
# Calibration
calnames=paste0("cal_v3_",names(groupings),".pdf")
for (i in 1:length(calnames)) {
file.copy(paste0(out_dir,calnames[i]),paste0("paper_figures/Calibration/",calnames[i]))
}
categories
##**********************************************#
## Organise figures for manuscript           ####
##**********************************************#
# Calibration
calnames=paste0("cal_v3_",names(groupings),".pdf")
for (i in 1:length(groupings)) {
file.copy(paste0(out_dir,calnames[i]),paste0("paper_figures/Calibration/",calnames[i]))
}
# Counterfactuals
cfnames=paste0("counterfactual_dp_v3_",names(groupings),".pdf")
for (i in 1:length(groupings)) {
file.copy(paste0(out_dir,cfnames[i]),paste0("paper_figures/Counterfactual/",cfnames[i]))
}
# Decomposition
dnames=paste0("for_breakdown_v3_",names(categories),".pdf")
for (i in 1:length(categories)) {
file.copy(paste0(out_dir,dnames[i]),paste0("paper_figures/Decomposition/",dnames[i]))
}
# DP
dpnames=c(
paste0("dp_v3_",names(groupings),"_all.pdf"),
"dp_v3_Age_Female.pdf",
"dp_v3_SIMD_Rural.pdf")
for (i in 1:length(dpnames)) {
file.copy(paste0(out_dir,dpnames[i]),paste0("paper_figures/Demographic_parity/",dpnames[i]))
}
# FDRP
fdnames=c(
paste0("fdrp_v3_",names(groupings),"_all.pdf"),
paste0("fdrp_adjusted_v3_",names(groupings),".pdf"))
for (i in 1:length(fdnames)) {
file.copy(paste0(out_dir,fdnames[i]),paste0("paper_figures/FDRP/",fdnames[i]))
}
# FORP
fonames=c(
paste0("forp_v3_",names(groupings),"_all.pdf"),
paste0("forp_adjusted_v3_",names(groupings),".pdf"))
for (i in 1:length(fonames)) {
file.copy(paste0(out_dir,fonames[i]),paste0("paper_figures/FORP/",fonames[i]))
}
# ROC
rocnames=paste0("roc_v3_",names(groupings),".pdf")
for (i in 1:length(rocnames)) {
file.copy(paste0(out_dir,rocnames[i]),paste0("paper_figures/ROC/",rocnames[i]))
}
dnames
names(categories)
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
setwd("../../SPARRAfairness/")
setwd("SPARRAfairness/")
document()
document()
document()
document()
setwd("../../fair/drawfigures/")
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
dnames
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
dnames
source("~/Research/Fairness/Git/fair/drawfigures/makeplots.R")
version=3
subgroup="Most_deprived"
obj_name=paste0("for_breakdown_v",version,"_",subgroup)
xname=paste0(out_dir,obj_name,".pdf")
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
names_group
decomp=decomposition_matrix[names_group,]
colSums(decomp)
barplot(colSums(decomp))
barplot(rbind(colSums(decomp),colSums(decomp[1:2,]))
)
barplot(rbind(colSums(decomp),colSums(decomp[1:2,])),beside=TRUE)
barplot(rbind(colSums(decomp),colSums(decomp[1:2,])),beside=TRUE,las=2)
c1=colSums(decomp); c2=colSums(decomp[1:2,])
barplot(rbind(c1/sum(c1),c2/sum(c2)),beside=TRUE,las=2)
subgroup="Most_deprived"
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
c1=colSums(decomp); c2=colSums(decomp[1:2,])
barplot(rbind(c1/sum(c1),c2/sum(c2)),beside=TRUE,las=2)
subgroup="Least_deprived"
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
c1=colSums(decomp); c2=colSums(decomp[1:2,])
barplot(rbind(c1/sum(c1),c2/sum(c2)),beside=TRUE,las=2)
subgroup="Least_deprived"
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
c1=colSums(decomp); c2=colSums(decomp[1:2,])
c1=c1/sum(c1); c2=c2/sum(c2)
barplot(rbind(c1,c2),beside=TRUE,las=2)
subgroup="Island"
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
c1=colSums(decomp); c2=colSums(decomp[1:2,])
c1=c1/sum(c1); c2=c2/sum(c2)
barplot(rbind(c1,c2),beside=TRUE,las=2)
subgroup="Mainland"
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
c1=colSums(decomp); c2=colSums(decomp[1:2,])
c1=c1/sum(c1); c2=c2/sum(c2)
barplot(rbind(c1,c2),beside=TRUE,las=2)
subgroup
subgroup="Most_deprived"
obj_name=paste0("for_breakdown_v",version,"_",subgroup)
xname=paste0(out_dir,obj_name,".pdf")
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
for_breakdown(decomp,group = subgroup,threshold = cutoff)
source("~/Desktop/temp.R")
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
for_breakdown(decomp,group = subgroup,threshold = cutoff)
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
for_breakdown(decomp,group = subgroup,threshold = cutoff)
xt
xt[["External"]]
yt[["External"]]
debugSource("~/Desktop/temp.R")
source("~/Desktop/temp.R")
names_group=paste0("v",version,"_",subgroup,"_q",1:20)
decomp=decomposition_matrix[names_group,]
for_breakdown(decomp,group = subgroup,threshold = cutoff)
setwd("~/Research/Fairness/Git/SPARRAfairness/SPARRAfairness/")
document()
